name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: timezone-service/package-lock.json
        
    - name: Install dependencies
      run: |
        cd timezone-service
        npm ci
        
    - name: Run full test suite
      run: |
        cd timezone-service
        npm run type-check
        npm run lint
        npm run test:coverage
        npm run build
        
    - name: Build Docker images
      run: |
        docker build -f timezone-service/Dockerfile -t timezone-service:${{ github.ref_name }} timezone-service
        docker build -f timezone-service/Dockerfile -t timezone-service:latest timezone-service
        
    - name: Create release archive
      run: |
        cd timezone-service
        tar -czf ../timezone-service-${{ github.ref_name }}.tar.gz \
          --exclude=node_modules \
          --exclude=coverage \
          --exclude=.git \
          .
        
    - name: Generate changelog
      id: changelog
      run: |
        if [ -f CHANGELOG.md ]; then
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat CHANGELOG.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "changelog=No changelog available" >> $GITHUB_OUTPUT
        fi
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## ðŸš€ Timezone Service ${{ github.ref_name }}
          
          ### Features
          - HTTP Node.js server with timezone API endpoints
          - TypeScript with strict typing
          - Decorator-based routing system
          - Dependency injection
          - Docker containerization
          - Comprehensive testing suite
          - CI/CD pipeline
          
          ### API Endpoints
          - `GET /` - API information
          - `GET /healthcheck` - Health check
          - `GET /time/:timezone` - Get current time in specified timezone
          
          ### Docker Images
          - Development: `timezone-service:dev`
          - Production: `timezone-service:latest`
          
          ### Usage
          ```bash
          # Using Docker
          docker run -p 3001:3000 timezone-service:${{ github.ref_name }}
          
          # Using Make
          make prod
          
          # Test the API
          curl http://localhost:3001/time/Etc/UTC
          ```
          
          ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: false
        
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./timezone-service-${{ github.ref_name }}.tar.gz
        asset_name: timezone-service-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip

  docker-publish:
    name: Publish Docker Images
    runs-on: ubuntu-latest
    needs: create-release
    if: github.repository == 'ViktorPalchynskyi/YNA_LIVECODE'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      
    - name: Build and push Docker images
      uses: docker/build-push-action@v5
      with:
        context: ./timezone-service
        file: ./timezone-service/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/timezone-service:${{ github.ref_name }}
          ${{ secrets.DOCKERHUB_USERNAME }}/timezone-service:latest
        platforms: linux/amd64,linux/arm64
        
    - name: Update Docker Hub description
      uses: peter-evans/dockerhub-description@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        repository: ${{ secrets.DOCKERHUB_USERNAME }}/timezone-service
        readme-filepath: ./README.md
